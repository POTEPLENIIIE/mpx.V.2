{"ast":null,"code":"import { Validators, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"@angular/common\";\nfunction ResetPasswordComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \" \\u041C\\u0456\\u043D\\u0456\\u043C\\u0443\\u043C 6 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u0456\\u0432 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1, \" \\u041F\\u0430\\u0440\\u043E\\u043B\\u0456 \\u043D\\u0435 \\u0441\\u043F\\u0456\\u0432\\u043F\\u0430\\u0434\\u0430\\u044E\\u0442\\u044C \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r0.message);\n  }\n}\nexport let ResetPasswordComponent = /*#__PURE__*/(() => {\n  class ResetPasswordComponent {\n    constructor(fb, route, http, router) {\n      this.fb = fb;\n      this.route = route;\n      this.http = http;\n      this.router = router;\n      this.token = '';\n      this.message = '';\n      this.isLoading = false;\n      this.form = this.fb.group({\n        password: ['', [Validators.required, Validators.minLength(6)]],\n        confirmPassword: ['', Validators.required]\n      }, {\n        validators: this.passwordsMatch\n      });\n    }\n    ngOnInit() {\n      this.token = this.route.snapshot.queryParamMap.get('token') || '';\n    }\n    passwordsMatch(group) {\n      const pass = group.get('password')?.value;\n      const confirm = group.get('confirmPassword')?.value;\n      return pass === confirm ? null : {\n        mismatch: true\n      };\n    }\n    onSubmit() {\n      if (this.form.invalid || !this.token) return;\n      this.isLoading = true;\n      const {\n        password\n      } = this.form.value;\n      this.http.post('/api/auth/reset-password', {\n        token: this.token,\n        password\n      }).subscribe({\n        next: () => {\n          this.message = '✅ Пароль успішно змінено!';\n          setTimeout(() => this.router.navigate(['/login']), 2000);\n        },\n        error: () => {\n          this.message = '❌ Невірний або протермінований токен';\n        },\n        complete: () => this.isLoading = false\n      });\n    }\n    static {\n      this.ɵfac = function ResetPasswordComponent_Factory(t) {\n        return new (t || ResetPasswordComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ResetPasswordComponent,\n        selectors: [[\"app-reset-password\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 12,\n        vars: 5,\n        consts: [[1, \"auth-wrapper\"], [1, \"auth-box\"], [3, \"ngSubmit\", \"formGroup\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"\\u041D\\u043E\\u0432\\u0438\\u0439 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"], [\"class\", \"error\", 4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"confirmPassword\", \"placeholder\", \"\\u041F\\u0456\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0456\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"], [\"type\", \"submit\", 3, \"disabled\"], [\"class\", \"info\", 4, \"ngIf\"], [1, \"error\"], [1, \"info\"]],\n        template: function ResetPasswordComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"h2\");\n            i0.ɵɵtext(3, \"\\u0421\\u043A\\u0438\\u0434\\u0430\\u043D\\u043D\\u044F \\u043F\\u0430\\u0440\\u043E\\u043B\\u044E\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"form\", 2);\n            i0.ɵɵlistener(\"ngSubmit\", function ResetPasswordComponent_Template_form_ngSubmit_4_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelement(5, \"input\", 3);\n            i0.ɵɵtemplate(6, ResetPasswordComponent_div_6_Template, 2, 0, \"div\", 4);\n            i0.ɵɵelement(7, \"input\", 5);\n            i0.ɵɵtemplate(8, ResetPasswordComponent_div_8_Template, 2, 0, \"div\", 4);\n            i0.ɵɵelementStart(9, \"button\", 6);\n            i0.ɵɵtext(10, \"\\u0417\\u0431\\u0435\\u0440\\u0435\\u0433\\u0442\\u0438\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(11, ResetPasswordComponent_div_11_Template, 2, 1, \"div\", 7);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"formGroup\", ctx.form);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.form.controls.password.invalid && ctx.form.controls.password.touched);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.form.hasError(\"mismatch\") && ctx.form.controls.confirmPassword.touched);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"disabled\", ctx.form.invalid || ctx.isLoading);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.message);\n          }\n        },\n        dependencies: [CommonModule, i4.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n        styles: [\".auth-wrapper[_ngcontent-%COMP%]{min-height:calc(100vh - 160px);background-color:#151515;display:flex;align-items:center;justify-content:center;padding:140px 20px 40px}.auth-box[_ngcontent-%COMP%]{background-color:#fff;color:#000;border-radius:16px;padding:40px 30px;width:100%;max-width:420px;box-shadow:0 0 25px #00000080;text-align:center}.auth-box[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin-bottom:30px;color:#3f5fff;font-size:28px}.auth-box[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{padding:12px 14px;font-size:16px;border-radius:10px;border:1.5px solid #ccc;margin-bottom:10px;width:100%}.auth-box[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{outline:none;border-color:#3f5fff;box-shadow:0 0 6px #3f5fff80}.auth-box[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:12px;font-size:17px;font-weight:600;background-color:#3f5fff;color:#fff;border:none;border-radius:10px;cursor:pointer;width:100%;margin-top:10px}.auth-box[_ngcontent-%COMP%]   .error[_ngcontent-%COMP%]{font-size:13px;color:#ff3f3f;text-align:left;margin-top:-8px;margin-bottom:8px}.auth-box[_ngcontent-%COMP%]   .info[_ngcontent-%COMP%]{margin-top:16px;color:#22df58;font-weight:500}\"]\n      });\n    }\n  }\n  return ResetPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}