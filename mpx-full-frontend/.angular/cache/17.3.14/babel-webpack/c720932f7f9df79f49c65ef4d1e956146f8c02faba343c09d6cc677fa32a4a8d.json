{"ast":null,"code":"import { Validators, ReactiveFormsModule } from \"@angular/forms\";\nimport { CommonModule } from \"@angular/common\";\nimport { NavbarComponent } from \"../navbar/navbar.component\";\nimport { FooterComponent } from \"../footer/footer.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.toastType);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.toastMessage, \"\\n\");\n  }\n}\nfunction LoginComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1, \" \\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u043A\\u043E\\u0440\\u0435\\u043A\\u0442\\u043D\\u0438\\u0439 email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1, \" \\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \\u043D\\u0435 \\u043C\\u043E\\u0436\\u0435 \\u0431\\u0443\\u0442\\u0438 \\u043F\\u043E\\u0440\\u043E\\u0436\\u043D\\u0456\\u043C \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(fb, AuthService, router) {\n      this.fb = fb;\n      this.AuthService = AuthService;\n      this.router = router;\n      this.showPassword = false;\n      this.toastMessage = null;\n      this.toastType = \"success\"; // Тип для повідомлення\n      this.errorMessage = \"\";\n      this.loginForm = this.fb.group({\n        email: [\"\", [Validators.required, Validators.email]],\n        password: [\"\", Validators.required]\n      });\n    }\n    get email() {\n      return this.loginForm.get(\"email\");\n    }\n    get password() {\n      return this.loginForm.get(\"password\");\n    }\n    togglePasswordd() {\n      this.showPassword = !this.showPassword;\n    }\n    // Функція для показу toast\n    showToast(message, type = \"success\") {\n      this.toastMessage = message;\n      this.toastType = type;\n      setTimeout(() => {\n        this.toastMessage = null;\n      }, 3000);\n    }\n    // Функція для логіну\n    login() {\n      const {\n        email,\n        password\n      } = this.loginForm.value;\n      this.AuthService.login({\n        email,\n        password\n      }).subscribe({\n        next: res => {\n          localStorage.setItem(\"token\", res.token);\n          this.showToast(\"Успішна авторизація!\", \"success\"); // Показуємо успіх\n          setTimeout(() => {\n            this.router.navigate([\"/dashboard\"]); // Перенаправлення на dashboard\n          }, 1000); // Пауза для показу повідомлення\n        },\n        error: err => {\n          this.showToast(\"Невідома помилка\", \"error\"); // Показуємо помилку\n          console.error(err);\n        }\n      });\n    }\n    static {\n      this.ɵfac = function LoginComponent_Factory(t) {\n        return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginComponent,\n        selectors: [[\"app-login\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 21,\n        vars: 6,\n        consts: [[\"class\", \"toast\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"auth-wrapper\"], [1, \"auth-box\"], [3, \"ngSubmit\", \"formGroup\"], [\"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Email\"], [\"class\", \"error\", 4, \"ngIf\"], [1, \"password-group\"], [\"formControlName\", \"password\", \"placeholder\", \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\", 3, \"type\"], [1, \"toggle\", 3, \"click\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"switch-link\"], [\"routerLink\", \"/register\"], [1, \"toast\", 3, \"ngClass\"], [1, \"error\"]],\n        template: function LoginComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelement(0, \"app-navbar\");\n            i0.ɵɵtemplate(1, LoginComponent_div_1_Template, 2, 2, \"div\", 0);\n            i0.ɵɵelementStart(2, \"section\", 1)(3, \"div\", 2)(4, \"h2\");\n            i0.ɵɵtext(5, \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"form\", 3);\n            i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n              return ctx.login();\n            });\n            i0.ɵɵelement(7, \"input\", 4);\n            i0.ɵɵtemplate(8, LoginComponent_div_8_Template, 2, 0, \"div\", 5);\n            i0.ɵɵelementStart(9, \"div\", 6);\n            i0.ɵɵelement(10, \"input\", 7);\n            i0.ɵɵelementStart(11, \"span\", 8);\n            i0.ɵɵlistener(\"click\", function LoginComponent_Template_span_click_11_listener() {\n              return ctx.togglePassword();\n            });\n            i0.ɵɵtext(12, \"\\uD83D\\uDC41\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(13, LoginComponent_div_13_Template, 2, 0, \"div\", 5);\n            i0.ɵɵelementStart(14, \"button\", 9);\n            i0.ɵɵtext(15, \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(16, \"div\", 10);\n            i0.ɵɵtext(17, \" \\u041D\\u0435\\u043C\\u0430\\u0454 \\u0430\\u043A\\u0430\\u0443\\u043D\\u0442\\u0443? \");\n            i0.ɵɵelementStart(18, \"a\", 11);\n            i0.ɵɵtext(19, \"\\u0417\\u0430\\u0440\\u0435\\u0454\\u0441\\u0442\\u0440\\u0443\\u0432\\u0430\\u0442\\u0438\\u0441\\u044F\");\n            i0.ɵɵelementEnd()()()()();\n            i0.ɵɵelement(20, \"app-footer\");\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.toastMessage);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", (ctx.email == null ? null : ctx.email.invalid) && (ctx.email == null ? null : ctx.email.touched));\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"type\", ctx.showPassword ? \"text\" : \"password\");\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngIf\", (ctx.password == null ? null : ctx.password.invalid) && (ctx.password == null ? null : ctx.password.touched));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n          }\n        },\n        dependencies: [NavbarComponent, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, FooterComponent, CommonModule, i4.NgClass, i4.NgIf],\n        styles: [\".toast[_ngcontent-%COMP%]{margin-top:20px;padding:15px;border-radius:8px;font-size:15px;text-align:center;color:#fff;background-color:#3f5fff;transition:opacity .5s ease}.toast.error[_ngcontent-%COMP%]{background-color:#ff3f3f}.toast.success[_ngcontent-%COMP%]{background-color:#22df58}.error-message[_ngcontent-%COMP%]{color:red;font-size:14px}.error[_ngcontent-%COMP%]{color:red;font-size:12px}\"]\n      });\n    }\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}