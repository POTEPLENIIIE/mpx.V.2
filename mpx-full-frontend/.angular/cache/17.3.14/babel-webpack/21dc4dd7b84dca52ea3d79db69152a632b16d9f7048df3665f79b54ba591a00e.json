{"ast":null,"code":"import { Validators, ReactiveFormsModule } from \"@angular/forms\";\nimport { CommonModule } from \"@angular/common\";\nimport { NavbarComponent } from \"../navbar/navbar.component\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction RegisterComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"div\", 14);\n    i0.…µ…µtext(1);\n    i0.…µ…µelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.…µ…µnextContext();\n    i0.…µ…µproperty(\"ngClass\", ctx_r0.toastType);\n    i0.…µ…µadvance();\n    i0.…µ…µtextInterpolate1(\" \", ctx_r0.toastMessage, \"\\n\");\n  }\n}\nfunction RegisterComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"div\", 15);\n    i0.…µ…µtext(1, \" \\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u043C\\u0456\\u043D\\u0456\\u043C\\u0443\\u043C 3 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u0438 \");\n    i0.…µ…µelementEnd();\n  }\n}\nfunction RegisterComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"div\", 15);\n    i0.…µ…µtext(1, \" \\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u043A\\u043E\\u0440\\u0435\\u043A\\u0442\\u043D\\u0438\\u0439 email \");\n    i0.…µ…µelementEnd();\n  }\n}\nfunction RegisterComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"div\", 15);\n    i0.…µ…µtext(1, \" \\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \\u043C\\u0430\\u0454 \\u0431\\u0443\\u0442\\u0438 \\u043D\\u0435 \\u043C\\u0435\\u043D\\u0448\\u0435 6 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u0456\\u0432 \");\n    i0.…µ…µelementEnd();\n  }\n}\nfunction RegisterComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"div\", 15);\n    i0.…µ…µtext(1, \" \\u041F\\u0430\\u0440\\u043E\\u043B\\u0456 \\u043D\\u0435 \\u0441\\u043F\\u0456\\u0432\\u043F\\u0430\\u0434\\u0430\\u044E\\u0442\\u044C \");\n    i0.…µ…µelementEnd();\n  }\n}\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(fb, authService, router) {\n      this.fb = fb;\n      this.authService = authService;\n      this.router = router;\n      this.showPassword = false;\n      // üëá –ö–∞—Å—Ç–æ–º–Ω–∏–π toast\n      this.toastMessage = null;\n      this.toastType = \"success\";\n      this.registerForm = this.fb.group({\n        username: [\"\", [Validators.required, Validators.minLength(3)]],\n        email: [\"\", [Validators.required, Validators.email]],\n        password: [\"\", [Validators.required, Validators.minLength(6)]],\n        confirmPassword: [\"\", Validators.required]\n      }, {\n        validators: this.passwordMatchValidator\n      });\n    }\n    get username() {\n      return this.registerForm.get(\"username\");\n    }\n    get email() {\n      return this.registerForm.get(\"email\");\n    }\n    get password() {\n      return this.registerForm.get(\"password\");\n    }\n    togglePassword() {\n      this.showPassword = !this.showPassword;\n    }\n    passwordMatchValidator(form) {\n      const password = form.get(\"password\")?.value;\n      const confirm = form.get(\"confirmPassword\")?.value;\n      return password === confirm ? null : {\n        mismatch: true\n      };\n    }\n    showToast(message, type = \"success\") {\n      this.toastMessage = message;\n      this.toastType = type;\n      setTimeout(() => {\n        this.toastMessage = null;\n      }, 3000);\n    }\n    onSubmit() {\n      if (this.registerForm.valid) {\n        const {\n          username,\n          email,\n          password\n        } = this.registerForm.value;\n        this.authService.register({\n          username,\n          email,\n          password\n        }).subscribe({\n          next: () => {\n            this.showToast(\"–£—Å–ø—ñ—à–Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è!\", \"success\");\n            this.router.navigate([\"/profile\"]);\n          },\n          error: err => {\n            console.error(err);\n            this.showToast(err.error?.message || \"–ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó\", \"error\");\n          }\n        });\n      }\n    }\n    static {\n      this.…µfac = function RegisterComponent_Factory(t) {\n        return new (t || RegisterComponent)(i0.…µ…µdirectiveInject(i1.FormBuilder), i0.…µ…µdirectiveInject(i2.AuthService), i0.…µ…µdirectiveInject(i3.Router));\n      };\n    }\n    static {\n      this.…µcmp = /*@__PURE__*/i0.…µ…µdefineComponent({\n        type: RegisterComponent,\n        selectors: [[\"app-register\"]],\n        standalone: true,\n        features: [i0.…µ…µStandaloneFeature],\n        decls: 25,\n        vars: 9,\n        consts: [[\"class\", \"toast\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"auth-wrapper\"], [1, \"auth-box\"], [3, \"ngSubmit\", \"formGroup\"], [\"type\", \"text\", \"formControlName\", \"username\", \"placeholder\", \"\\u0406\\u043C'\\u044F \\u043A\\u043E\\u0440\\u0438\\u0441\\u0442\\u0443\\u0432\\u0430\\u0447\\u0430\"], [\"class\", \"error\", 4, \"ngIf\"], [\"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Email\"], [1, \"password-group\"], [\"formControlName\", \"password\", \"placeholder\", \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\", 3, \"type\"], [1, \"toggle\", 3, \"click\"], [\"formControlName\", \"confirmPassword\", \"placeholder\", \"\\u041F\\u0456\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0456\\u0442\\u044C \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\", 3, \"type\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"switch-link\"], [\"routerLink\", \"/login\"], [1, \"toast\", 3, \"ngClass\"], [1, \"error\"]],\n        template: function RegisterComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.…µ…µelement(0, \"app-navbar\");\n            i0.…µ…µtemplate(1, RegisterComponent_div_1_Template, 2, 2, \"div\", 0);\n            i0.…µ…µelementStart(2, \"section\", 1)(3, \"div\", 2)(4, \"h2\");\n            i0.…µ…µtext(5, \"\\u0420\\u0435\\u0454\\u0441\\u0442\\u0440\\u0430\\u0446\\u0456\\u044F\");\n            i0.…µ…µelementEnd();\n            i0.…µ…µelementStart(6, \"form\", 3);\n            i0.…µ…µlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_6_listener() {\n              return ctx.onSubmit();\n            });\n            i0.…µ…µelement(7, \"input\", 4);\n            i0.…µ…µtemplate(8, RegisterComponent_div_8_Template, 2, 0, \"div\", 5);\n            i0.…µ…µelement(9, \"input\", 6);\n            i0.…µ…µtemplate(10, RegisterComponent_div_10_Template, 2, 0, \"div\", 5);\n            i0.…µ…µelementStart(11, \"div\", 7);\n            i0.…µ…µelement(12, \"input\", 8);\n            i0.…µ…µelementStart(13, \"span\", 9);\n            i0.…µ…µlistener(\"click\", function RegisterComponent_Template_span_click_13_listener() {\n              return ctx.togglePassword();\n            });\n            i0.…µ…µtext(14, \"\\uD83D\\uDC41\");\n            i0.…µ…µelementEnd()();\n            i0.…µ…µtemplate(15, RegisterComponent_div_15_Template, 2, 0, \"div\", 5);\n            i0.…µ…µelement(16, \"input\", 10);\n            i0.…µ…µtemplate(17, RegisterComponent_div_17_Template, 2, 0, \"div\", 5);\n            i0.…µ…µelementStart(18, \"button\", 11);\n            i0.…µ…µtext(19, \" \\u0417\\u0430\\u0440\\u0435\\u0454\\u0441\\u0442\\u0440\\u0443\\u0432\\u0430\\u0442\\u0438\\u0441\\u044F \");\n            i0.…µ…µelementEnd();\n            i0.…µ…µelementStart(20, \"div\", 12);\n            i0.…µ…µtext(21, \" \\u041C\\u0430\\u0454\\u0448 \\u0430\\u043A\\u0430\\u0443\\u043D\\u0442? \");\n            i0.…µ…µelementStart(22, \"a\", 13);\n            i0.…µ…µtext(23, \"\\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\");\n            i0.…µ…µelementEnd()()()()();\n            i0.…µ…µelement(24, \"app-footer\");\n          }\n          if (rf & 2) {\n            i0.…µ…µadvance();\n            i0.…µ…µproperty(\"ngIf\", ctx.toastMessage);\n            i0.…µ…µadvance(5);\n            i0.…µ…µproperty(\"formGroup\", ctx.registerForm);\n            i0.…µ…µadvance(2);\n            i0.…µ…µproperty(\"ngIf\", (ctx.username == null ? null : ctx.username.invalid) && (ctx.username == null ? null : ctx.username.touched));\n            i0.…µ…µadvance(2);\n            i0.…µ…µproperty(\"ngIf\", (ctx.email == null ? null : ctx.email.invalid) && (ctx.email == null ? null : ctx.email.touched));\n            i0.…µ…µadvance(2);\n            i0.…µ…µproperty(\"type\", ctx.showPassword ? \"text\" : \"password\");\n            i0.…µ…µadvance(3);\n            i0.…µ…µproperty(\"ngIf\", (ctx.password == null ? null : ctx.password.invalid) && (ctx.password == null ? null : ctx.password.touched));\n            i0.…µ…µadvance();\n            i0.…µ…µproperty(\"type\", ctx.showPassword ? \"text\" : \"password\");\n            i0.…µ…µadvance();\n            i0.…µ…µproperty(\"ngIf\", ctx.registerForm.hasError(\"mismatch\"));\n            i0.…µ…µadvance();\n            i0.…µ…µproperty(\"disabled\", ctx.registerForm.invalid);\n          }\n        },\n        dependencies: [CommonModule, i4.NgClass, i4.NgIf, ReactiveFormsModule, i1.…µNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, NavbarComponent],\n        styles: [\".error[_ngcontent-%COMP%]{font-size:13px;color:#ff3f3f;text-align:left;margin-top:-10px;margin-bottom:8px;padding-left:4px}.password-group[_ngcontent-%COMP%]{position:relative}.password-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%}.password-group[_ngcontent-%COMP%]   .toggle[_ngcontent-%COMP%]{position:absolute;right:12px;top:50%;transform:translateY(-50%);cursor:pointer;font-size:18px;color:#888}.password-group[_ngcontent-%COMP%]   .toggle[_ngcontent-%COMP%]:hover{color:#3f5fff}\"]\n      });\n    }\n  }\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}