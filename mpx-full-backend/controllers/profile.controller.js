import fs from "fs";
import path from "path";
import User from "../models/User.js";
import { fileURLToPath } from "url";
import { dirname } from "path";

// –î–ª—è `__dirname` –≤ ES module
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

export const getUserData = async (req, res) => {
  try {
    const user = await User.findById(req.user.id).select("-password").lean();
    if (!user) {
      return res.status(404).json({ message: "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ" });
    }

    // –î–æ–¥–∞—î–º–æ –ø–æ–≤–Ω–∏–π —à–ª—è—Ö –¥–æ –∞–≤–∞—Ç–∞—Ä–∫–∏
    user.avatarUrl = `/uploads/avatars/${user.avatar}`;

    res.json(user);
  } catch (error) {
    console.error("–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:", error);
    res.status(500).json({ message: "–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
  }
};

export const updateAvatar = async (req, res) => {
  try {
    const user = await User.findById(req.user.id);
    if (!user)
      return res.status(404).json({ message: "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ" });

    if (!req.file)
      return res.status(400).json({ message: "–§–∞–π–ª –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ" });

    const newFilename = req.file.filename;

    // üíæ –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–æ–≤–æ–≥–æ –∞–≤–∞—Ç–∞—Ä–∞ –≤ –±–∞–∑—É
    const oldFilename = user.avatar;
    user.avatar = newFilename;
    await user.save();

    // üßπ –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π (–ø—ñ—Å–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ)
    if (oldFilename && oldFilename !== "default-avatar.webp") {
      const oldPath = path.join(
        __dirname,
        "..",
        "uploads",
        "avatars",
        oldFilename
      );
      if (fs.existsSync(oldPath)) {
        fs.unlink(oldPath, (err) => {
          if (err) console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Å—Ç–∞—Ä–æ–≥–æ –∞–≤–∞—Ç–∞—Ä–∞:", err);
          else console.log("üßπ –°—Ç–∞—Ä–∏–π –∞–≤–∞—Ç–∞—Ä –≤–∏–¥–∞–ª–µ–Ω–æ:", oldFilename);
        });
      }
    }

    console.log("‚úÖ –ó–±–µ—Ä–µ–∂–µ–Ω–æ avatar —É –±–∞–∑—ñ:", user.avatar);
    res.json({ message: "–ê–≤–∞—Ç–∞—Ä –æ–Ω–æ–≤–ª–µ–Ω–æ", avatar: user.avatar });
  } catch (err) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ –∞–≤–∞—Ç–∞—Ä–∞:", err);
    res.status(500).json({ message: "–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" });
  }
};
